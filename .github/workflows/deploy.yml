name: Build & Deploy

on:
  push:
    branches: [ main ]

permissions:
  id-token: write       # OIDC で AWS ロールを引き受ける
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECR_REPO: 904368995258.dkr.ecr.ap-northeast-1.amazonaws.com/chachat-backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::904368995258:role/github-actions-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2


      - name: Build & push multi‑arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.ECR_REPO }}:latest
          cache-to: type=registry,ref=${{ env.ECR_REPO }}:buildcache,mode=max,image-manifest=true
          cache-from: type=registry,ref=${{ env.ECR_REPO }}:buildcache

      - name: Render new task definition
        id: render_td
        run: |
          # 1. pull latest task definition as template
          aws ecs describe-task-definition \
            --task-definition aiqly-backend \
            --query 'taskDefinition' \
            --output json > taskdef.json

          # 2. replace image tag with :latest (just built), strip AWS‑managed fields
          jq --arg IMAGE "${{ env.ECR_REPO }}:latest" '
              .containerDefinitions[0].image = $IMAGE
              | del(.taskDefinitionArn, .revision, .status, .compatibilities,
                     .registeredAt, .registeredBy, .requiresAttributes)
          ' taskdef.json > taskdef_new.json

      - name: Register task definition
        id: register_td
        run: |
          NEW_TD_ARN=$(aws ecs register-task-definition \
              --cli-input-json file://taskdef_new.json \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)
          echo "new_td=$NEW_TD_ARN" >> "$GITHUB_OUTPUT"

      - name: Run Alembic migrations on RDS
        run: |
          aws ecs run-task \
            --cluster aiqly-prod \
            --launch-type FARGATE \
            --task-definition ${{ steps.register_td.outputs.new_td }} \
            --count 1 \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-032da3af4dc382e44,subnet-09512824c0aaea846,subnet-04a264dde050c95e5],securityGroups=[sg-049ab2067088e7119],assignPublicIp=DISABLED}" \
            --overrides '{"containerOverrides":[{"name":"backend","command":["flask","db","upgrade"]}],"cpu":"256","memory":"512"}' \
            --started-by github-ci

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster aiqly-prod \
            --service backend \
            --task-definition ${{ steps.register_td.outputs.new_td }} \
            --force-new-deployment